---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  chart:
    spec:
      chart: grafana
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
      version: 7.0.11
  values:
    serviceMonitor:
      enabled: true
    podAnnotations:
      operator.1password.io/item-path: "vaults/Kubernetes/items/grafana-secret"
      operator.1password.io/item-name: "grafana-secret"
    admin:
      existingSecret: "grafana-secret"
      userKey: username
      passwordKey: password
    env:
      GF_FEATURE_TOGGLES_ENABLE: publicDashboards
      GF_DATABASE_TYPE: postgres
      GF_DATABASE_HOST: postgresql-rw
    envValueFrom:
      GF_DATABASE_NAME:
        secretKeyRef:
          name: postgresql-app
          key: dbname
      GF_DATABASE_USER:
        secretKeyRef:
          name: postgresql-app
          key: user
      GF_DATABASE_PASSWORD:
        secretKeyRef:
          name: postgresql-app
          key: password
    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
          - name: Prometheus
            type: prometheus
            url: http://kube-prometheus-stack-prometheus:9090
            access: proxy
            isDefault: true
    grafana.ini:
      analytics:
        check_for_updates: false
        check_for_plugin_updates: false
        reporting_enabled: false
      date_formats:
        use_browser_locale: true
      explore:
        enabled: true
      news:
        news_feed_enabled: false
      panels:
        disable_sanitize_html: true
      security:
        allow_embedding: true
        cookie_samesite: grafana
      server:
        root_url: https://grafana.damoun.cloud
    imageRenderer:
      enabled: true
    persistence:
      enabled: false
    
    resources:
      limits:
        memory: 219M
      requests:
        cpu: 23m
        memory: 127M

    sidecar:
      dashboards:
        enabled: true
        labelValue: ""
        label: grafana_dashboard
        folderAnnotation: grafana_folder
        searchNamespace: ALL
        provider:
          disableDelete: true
          foldersFromFilesStructure: true
      datasources:
        enabled: true
        labelValue: ""
        searchNamespace: ALL
    
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: default
            disableDeletion: false
            editable: true
            folder: ""
            options:
              path: /var/lib/grafana/dashboards/default
            orgId: 1
            type: file
          - name: node-exporter
            disableDeletion: false
            editable: true
            folder: Node-exporter
            options:
              path: /var/lib/grafana/dashboards/node-exporter
          - name: network
            disableDeletion: false
            editable: true
            folder: Network
            options:
              path: /var/lib/grafana/dashboards/network
          - name: flux
            disableDeletion: false
            editable: true
            folder: Flux
            options:
              path: /var/lib/grafana/dashboards/flux
          - name: kubernetes
            orgId: 1
            folder: Kubernetes
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/kubernetes
          - name: database
            orgId: 1
            folder: Database
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/database
          - name: nginx
            orgId: 1
            folder: Nginx
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/nginx

    dashboards:
      node-exporter:
        # Ref: https://grafana.com/grafana/dashboards/1860-node-exporter-full/
        node-exporter:
          gnetId: 1860
          revision: 29
          datasource: Prometheus
      database:
        cloudnative-pg:
          url: https://raw.githubusercontent.com/cloudnative-pg/cloudnative-pg/main/docs/src/samples/monitoring/grafana-dashboard.json
          datasource: Prometheus
      network:
        speedtest-exporter-hub:
          gnetId: 13665
          revision: 4
          datasource:
            - name: "DS_PROMETHEUS"
              value: Prometheus
        cloudflared:
          # renovate: depName="Cloudflare Tunnels (cloudflared)"
          gnetId: 17457
          revision: 6
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
      flux:
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/control-plane.json
          datasource: Prometheus
        flux-logs:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/logs.json
          datasource: Prometheus
      kubernetes:
        kubernetes-api-server:
          # renovate: depName="Kubernetes / System / API Server"
          gnetId: 15761
          revision: 14
          datasource: Prometheus
        kubernetes-coredns:
          # renovate: depName="Kubernetes / System / CoreDNS"
          gnetId: 15762
          revision: 13
          datasource: Prometheus
        kubernetes-global:
          # renovate: depName="Kubernetes / Views / Global"
          gnetId: 15757
          revision: 31
          datasource: Prometheus
        kubernetes-namespaces:
          # renovate: depName="Kubernetes / Views / Namespaces"
          gnetId: 15758
          revision: 27
          datasource: Prometheus
        kubernetes-nodes:
          # renovate: depName="Kubernetes / Views / Nodes"
          gnetId: 15759
          revision: 19
          datasource: Prometheus
        kubernetes-pods:
          # renovate: depName="Kubernetes / Views / Pods"
          gNetId: 15760
          revision: 21
          datasource: Prometheus
        kubernetes-volumes:
          # renovate: depName="K8s / Storage / Volumes / Cluster"
          gnetId: 11454
          revision: 14
          datasource: Prometheus
      nginx:
        nginx:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
          datasource: Prometheus
        nginx-request-handling-performance:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/request-handling-performance.json
          datasource: Prometheus
  interval: 1m0s
